on:
    pull_request:
        branches: [release]
        types: [closed]

env:
    SERVER_IMAGE_NAME: dead-lock-nestjs-server
    AI_IMAGE_NAME: dead-lock-ai-server

jobs:
    build-server:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Create Production Env Variables
              run: |
                  cd ./server
                  echo "${{secrets.PRODUCTION_ENV}}" > "./prod.env";

            - name: Dockerhub Login
              uses: docker/login-action@v2
              with:
                  username: ${{secrets.DOCKER_USER}}
                  password: ${{secrets.DOCKER_PASSWORD}}

            - name: Build Docker Image and Push Dockerhub
              run: |
                  cd ./server
                  docker buildx create --use
                  docker buildx build --platform linux/amd64 -t ${{secrets.DOCKER_USER}}/${{env.SERVER_IMAGE_NAME}}:latest --push .

    build-ai-server:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Dockerhub Login
              uses: docker/login-action@v2
              with:
                  username: ${{secrets.DOCKER_USER}}
                  password: ${{secrets.DOCKER_PASSWORD}}

            - name: Build Docker Image and Push Dockerhub
              run: |
                  cd ./python
                  docker buildx create --use
                  docker buildx build --platform linux/amd64 -t ${{secrets.DOCKER_USER}}/${{env.AI_IMAGE_NAME}}:latest --push .

    deploy:
        runs-on: self-hosted
        needs: [build-server, build-ai-server]
        steps:
            - name: Remove Previous Container and Images
              run: |
                  sudo docker stop ${{env.SERVER_IMAGE_NAME}} || true
                  sudo docker rm ${{env.SERVER_IMAGE_NAME}} || true
                  sudo docker rmi ${{env.SERVER_IMAGE_NAME}} || true

                  sudo docker stop ${{env.AI_IMAGE_NAME}} || true
                  sudo docker rm ${{env.AI_IMAGE_NAME}} || true
                  sudo docker rmi ${{env.AI_IMAGE_NAME}} || true

            - name: Run Container with Docker Compose
              run: |
                  sudo docker-compose up -d

            - name: Remove Unused Containers and Images
              run: |
                  sudo docker system prune -a -f
